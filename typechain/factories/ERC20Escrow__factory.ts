/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Escrow, ERC20EscrowInterface } from "../ERC20Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogGLDRolledBack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogGLDSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogGLDWithDraw",
    type: "event",
  },
  {
    inputs: [],
    name: "getGLDBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "rollbackGLD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendGLD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGLD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200195b3803806200195b833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000123565b6000815190506200008f8162000109565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000e9565b9050919050565b6000620000e282620000c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200011481620000d5565b81146200012057600080fd5b50565b61182880620001336000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630d335f3d14610051578063cfb11fc71461006d578063d2472cb61461008b578063e0f4ba1414610095575b600080fd5b61006b600480360381019061006691906111b3565b6100b1565b005b6100756106dd565b604051610082919061148a565b60405180910390f35b61009361078e565b005b6100af60048036038101906100aa919061118a565b610b9f565b005b6000339050600082905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610114919061131d565b60206040518083038186803b15801561012c57600080fd5b505afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101649190611218565b8111156101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d9061146a565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b8152600401610202929190611361565b60206040518083038186803b15801561021a57600080fd5b505afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102529190611218565b1015610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a9061140a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330866040518463ffffffff1660e01b81526004016102f09392919061138a565b602060405180830381600087803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034291906111ef565b5080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461039291906114b6565b92505081905550600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104aa576000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b80600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053691906114b6565b925050819055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f73b01460b5d0356bc41e4d618d3ac3aabc773ab762c363452c3e66ad535210fb836040516106cf919061148a565b60405180910390a350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610739919061131d565b60206040518083038186803b15801561075157600080fd5b505afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107899190611218565b905090565b60003390506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081141561081b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108129061142a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610876929190611338565b602060405180830381600087803b15801561089057600080fd5b505af11580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c891906111ef565b50600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560005b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610b4c576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055508080610b44906115d0565b91505061090f565b503373ffffffffffffffffffffffffffffffffffffffff167f9c5adb709b8e733065747a9bf9f069dd54069b33d687a30a8cf21e28e4bcda6782604051610b93919061148a565b60405180910390a25050565b6000339050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c64906113ea565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415610d32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d299061144a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d8d9291906113c1565b602060405180830381600087803b158015610da757600080fd5b505af1158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf91906111ef565b5080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e2f919061150c565b92505081905550600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611130576000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611011577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561111c57600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106110e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550611130565b508080611128906115d0565b915050610f4e565b50505050565b600081359050611145816117ad565b92915050565b60008151905061115a816117c4565b92915050565b60008135905061116f816117db565b92915050565b600081519050611184816117db565b92915050565b60006020828403121561119c57600080fd5b60006111aa84828501611136565b91505092915050565b600080604083850312156111c657600080fd5b60006111d485828601611136565b92505060206111e585828601611160565b9150509250929050565b60006020828403121561120157600080fd5b600061120f8482850161114b565b91505092915050565b60006020828403121561122a57600080fd5b600061123884828501611175565b91505092915050565b61124a8161159a565b82525050565b61125981611540565b82525050565b600061126c604b836114a5565b915061127782611648565b606082019050919050565b600061128f6019836114a5565b915061129a826116bd565b602082019050919050565b60006112b26027836114a5565b91506112bd826116e6565b604082019050919050565b60006112d56013836114a5565b91506112e082611735565b602082019050919050565b60006112f86022836114a5565b91506113038261175e565b604082019050919050565b61131781611590565b82525050565b60006020820190506113326000830184611250565b92915050565b600060408201905061134d6000830185611241565b61135a602083018461130e565b9392505050565b60006040820190506113766000830185611250565b6113836020830184611250565b9392505050565b600060608201905061139f6000830186611250565b6113ac6020830185611250565b6113b9604083018461130e565b949350505050565b60006040820190506113d66000830185611250565b6113e3602083018461130e565b9392505050565b600060208201905081810360008301526114038161125f565b9050919050565b6000602082019050818103600083015261142381611282565b9050919050565b60006020820190508181036000830152611443816112a5565b9050919050565b60006020820190508181036000830152611463816112c8565b9050919050565b60006020820190508181036000830152611483816112eb565b9050919050565b600060208201905061149f600083018461130e565b92915050565b600082825260208201905092915050565b60006114c182611590565b91506114cc83611590565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561150157611500611619565b5b828201905092915050565b600061151782611590565b915061152283611590565b92508282101561153557611534611619565b5b828203905092915050565b600061154b82611570565b9050919050565b600061155d82611570565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115a5826115ac565b9050919050565b60006115b7826115be565b9050919050565b60006115c982611570565b9050919050565b60006115db82611590565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561160e5761160d611619565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f526f6c6c6261636b206973206e6f7420617661696c61626c6520666f7220796f60008201527f752e20455243323020746f6b656e73206d6967687420626520616c726561647960208201527f2077697468647261776564000000000000000000000000000000000000000000604082015250565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b7f596f7520646f6e2774206861766520455243323020746f6b656e732073656e7460008201527f20746f20796f7500000000000000000000000000000000000000000000000000602082015250565b7f526f6c6c6261636b2076616c7565206973203000000000000000000000000000600082015250565b7f596f7520646f6e2774206861766520656e6f75676820455243323020746f6b6560008201527f6e73000000000000000000000000000000000000000000000000000000000000602082015250565b6117b681611552565b81146117c157600080fd5b50565b6117cd81611564565b81146117d857600080fd5b50565b6117e481611590565b81146117ef57600080fd5b5056fea26469706673582212207c11e16880795fd175f2f7eef5e0b3e9a4297eb2292b6ea6d869ed9fd35668f064736f6c63430008040033";

export class ERC20Escrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Escrow> {
    return super.deploy(_token, overrides || {}) as Promise<ERC20Escrow>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): ERC20Escrow {
    return super.attach(address) as ERC20Escrow;
  }
  connect(signer: Signer): ERC20Escrow__factory {
    return super.connect(signer) as ERC20Escrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20EscrowInterface {
    return new utils.Interface(_abi) as ERC20EscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Escrow {
    return new Contract(address, _abi, signerOrProvider) as ERC20Escrow;
  }
}
