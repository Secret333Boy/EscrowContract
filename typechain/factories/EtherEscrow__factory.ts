/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EtherEscrow, EtherEscrowInterface } from "../EtherEscrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Error",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogRolledBack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogWithDraw",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getEtherBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "rollbackEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "sendEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f09806100206000396000f3fe6080604052600436106100435760003560e01c8063368438611461008157806348c981e2146100aa5780637362377b146100c6578063ea46193e146100dd5761004a565b3661004a57005b7f08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa60405161007790610be2565b60405180910390a1005b34801561008d57600080fd5b506100a860048036038101906100a39190610ae6565b610108565b005b6100c460048036038101906100bf9190610ae6565b6105ee565b005b3480156100d257600080fd5b506100db6107b0565b005b3480156100e957600080fd5b506100f2610a38565b6040516100ff9190610c62565b60405180910390f35b60003390506000805b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156102de578273ffffffffffffffffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106101e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102cb576000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106102ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020154826102c89190610c99565b91505b80806102d690610d2b565b915050610111565b506000811415610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90610c42565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161034990610bcd565b60006040518083038185875af1925050503d8060008114610386576040519150601f19603f3d011682016040523d82523d6000602084013e61038b565b606091505b50509050806103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690610c02565b60405180910390fd5b60005b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156105e7578373ffffffffffffffffffffffffffffffffffffffff166000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106104a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105d4576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061056c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905550505b80806105df90610d2b565b9150506103d2565b5050505050565b60003390506000349050600060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018381525090506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fa343f361112b028dae2501770614271723be1d24c9f64fed2d4bd3ddf1c13e35846040516107a29190610c62565b60405180910390a350505050565b60003390506000805b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156108aa576000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610878577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020154826108959190610c99565b915080806108a290610d2b565b9150506107b9565b5060008114156108ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e690610c22565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161091590610bcd565b60006040518083038185875af1925050503d8060008114610952576040519150601f19603f3d011682016040523d82523d6000602084013e610957565b606091505b505090508061099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290610c02565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109e59190610a40565b3373ffffffffffffffffffffffffffffffffffffffff167fa74fab966bfc29d4ea7866d609ac5d94324a5fe817362d6a9fee5d2f8df4675983604051610a2b9190610c62565b60405180910390a2505050565b600047905090565b5080546000825560030290600052602060002090810190610a619190610a64565b50565b5b80821115610acd57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905550600301610a65565b5090565b600081359050610ae081610ebc565b92915050565b600060208284031215610af857600080fd5b6000610b0684828501610ad1565b91505092915050565b6000610b1c601f83610c88565b9150610b2782610da3565b602082019050919050565b6000610b3f601483610c88565b9150610b4a82610dcc565b602082019050919050565b6000610b62602183610c88565b9150610b6d82610df5565b604082019050919050565b6000610b85604583610c88565b9150610b9082610e44565b606082019050919050565b6000610ba8600083610c7d565b9150610bb382610eb9565b600082019050919050565b610bc781610d21565b82525050565b6000610bd882610b9b565b9150819050919050565b60006020820190508181036000830152610bfb81610b0f565b9050919050565b60006020820190508181036000830152610c1b81610b32565b9050919050565b60006020820190508181036000830152610c3b81610b55565b9050919050565b60006020820190508181036000830152610c5b81610b78565b9050919050565b6000602082019050610c776000830184610bbe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ca482610d21565b9150610caf83610d21565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce457610ce3610d74565b5b828201905092915050565b6000610cfa82610d01565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d3682610d21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6957610d68610d74565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f63616c6c206f662061206e6f6e2d6578697374656e742066756e6374696f6e00600082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f596f7520646f6e27742068617665206574686572732073656e7420746f20796f60008201527f7500000000000000000000000000000000000000000000000000000000000000602082015250565b7f526f6c6c6261636b206973206e6f7420617661696c61626c6520666f7220796f60008201527f752e20457468657273206d6967687420626520616c726561647920776974686460208201527f7261776564000000000000000000000000000000000000000000000000000000604082015250565b50565b610ec581610cef565b8114610ed057600080fd5b5056fea26469706673582212209f57d36f8f17439b7a1f28801cfe73231272ea4885b67f0de1f00597ac27b1cf64736f6c63430008040033";

export class EtherEscrow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EtherEscrow> {
    return super.deploy(overrides || {}) as Promise<EtherEscrow>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EtherEscrow {
    return super.attach(address) as EtherEscrow;
  }
  connect(signer: Signer): EtherEscrow__factory {
    return super.connect(signer) as EtherEscrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherEscrowInterface {
    return new utils.Interface(_abi) as EtherEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherEscrow {
    return new Contract(address, _abi, signerOrProvider) as EtherEscrow;
  }
}
