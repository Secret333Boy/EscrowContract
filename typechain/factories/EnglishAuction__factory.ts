/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  EnglishAuction,
  EnglishAuctionInterface,
} from '../EnglishAuction';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract ERC721',
        name: '_nft',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_startingBid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_duration',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Bid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'winner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'End',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'Start',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'bidder',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [],
    name: 'bid',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'bids',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'end',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endAt',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ended',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'highestBid',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'highestBidder',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nft',
    outputs: [
      {
        internalType: 'contract ERC721',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nftId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'seller',
    outputs: [
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_nftId',
        type: 'uint256',
      },
    ],
    name: 'start',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'started',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'timeLeft',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200166c3803806200166c8339818101604052810190620000379190620000fd565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060058190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600781905550505050620001d9565b600081519050620000e081620001a5565b92915050565b600081519050620000f781620001bf565b92915050565b6000806000606084860312156200011357600080fd5b60006200012386828701620000cf565b93505060206200013686828701620000e6565b92505060406200014986828701620000e6565b9150509250925092565b600062000160826200017b565b9050919050565b6000620001748262000153565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001b08162000167565b8114620001bc57600080fd5b50565b620001ca816200019b565b8114620001d657600080fd5b50565b61148380620001e96000396000f3fe6080604052600436106100dd5760003560e01c806362ea82db1161007f57806395805dad1161005957806395805dad1461026d578063c6bc518214610296578063d57bde79146102c1578063efbe1c1c146102ec576100dd565b806362ea82db146101da5780637cc3ae8c1461021757806391f9015714610242576100dd565b80631998aeef116100bb5780631998aeef146101635780631f2698ab1461016d5780633ccfd60b1461019857806347ccca02146101af576100dd565b806308551a53146100e257806312fa6feb1461010d5780631300a6d114610138575b600080fd5b3480156100ee57600080fd5b506100f7610303565b6040516101049190610f9f565b60405180910390f35b34801561011957600080fd5b50610122610329565b60405161012f9190611051565b60405180910390f35b34801561014457600080fd5b5061014d61033c565b60405161015a9190611167565b60405180910390f35b61016b610364565b005b34801561017957600080fd5b506101826106b0565b60405161018f9190611051565b60405180910390f35b3480156101a457600080fd5b506101ad6106c3565b005b3480156101bb57600080fd5b506101c46107e4565b6040516101d1919061106c565b60405180910390f35b3480156101e657600080fd5b5061020160048036038101906101fc9190610de3565b610808565b60405161020e9190611167565b60405180910390f35b34801561022357600080fd5b5061022c610820565b6040516102399190611167565b60405180910390f35b34801561024e57600080fd5b50610257610826565b6040516102649190610f84565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f9190610e0c565b61084c565b005b3480156102a257600080fd5b506102ab610a22565b6040516102b89190611167565b60405180910390f35b3480156102cd57600080fd5b506102d6610a28565b6040516102e39190611167565b60405180910390f35b3480156102f857600080fd5b50610301610a2e565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460019054906101000a900460ff1681565b600060035442106103505760009050610361565b4260035461035e91906111e9565b90505b90565b600460009054906101000a900460ff166103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa906110e7565b60405180910390fd5b60035442106103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ee90611087565b60405180910390fd5b600754600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054346104459190611193565b11610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c906110a7565b60405180910390fd5b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105975760075460086000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058f9190611193565b925050819055505b60086000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546007819055503373ffffffffffffffffffffffffffffffffffffffff167fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d260086000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516106a69190611167565b60405180910390a2565b600460009054906101000a900460ff1681565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610792573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516107d99190611167565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b60035481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900460ff161561089c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089390611107565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461092c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610923906110c7565b60405180910390fd5b8060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306001546040518463ffffffff1660e01b815260040161099293929190610ff1565b600060405180830381600087803b1580156109ac57600080fd5b505af11580156109c0573d6000803e3d6000fd5b505050506001600460006101000a81548160ff021916908315150217905550600554426109ed9190611193565b6003819055507f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b60405160405180910390a150565b60015481565b60075481565b600460009054906101000a900460ff16610a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a74906110e7565b60405180910390fd5b600354421015610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990611147565b60405180910390fd5b600460019054906101000a900460ff1615610b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0990611127565b60405180910390fd5b6001600460016101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ca65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518463ffffffff1660e01b8152600401610c0493929190610ff1565b600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6007549081150290604051600060405180830381858888f19350505050158015610ca0573d6000803e3d6000fd5b50610d5a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001546040518463ffffffff1660e01b8152600401610d2793929190610fba565b600060405180830381600087803b158015610d4157600080fd5b505af1158015610d55573d6000803e3d6000fd5b505050505b7f7d7570b046e5ead3a4f3fbc9fa2445113625a1e79823776146316bafed6b8cc5600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600754604051610daf929190611028565b60405180910390a1565b600081359050610dc88161141f565b92915050565b600081359050610ddd81611436565b92915050565b600060208284031215610df557600080fd5b6000610e0384828501610db9565b91505092915050565b600060208284031215610e1e57600080fd5b6000610e2c84828501610dce565b91505092915050565b610e3e81611277565b82525050565b610e4d8161122f565b82525050565b610e5c8161121d565b82525050565b610e6b81611241565b82525050565b610e7a81611289565b82525050565b6000610e8d600d83611182565b9150610e9882611300565b602082019050919050565b6000610eb0600f83611182565b9150610ebb82611329565b602082019050919050565b6000610ed3601683611182565b9150610ede82611352565b602082019050919050565b6000610ef6600b83611182565b9150610f018261137b565b602082019050919050565b6000610f19600783611182565b9150610f24826113a4565b602082019050919050565b6000610f3c600583611182565b9150610f47826113cd565b602082019050919050565b6000610f5f600983611182565b9150610f6a826113f6565b602082019050919050565b610f7e8161126d565b82525050565b6000602082019050610f996000830184610e53565b92915050565b6000602082019050610fb46000830184610e44565b92915050565b6000606082019050610fcf6000830186610e53565b610fdc6020830185610e35565b610fe96040830184610f75565b949350505050565b60006060820190506110066000830186610e53565b6110136020830185610e53565b6110206040830184610f75565b949350505050565b600060408201905061103d6000830185610e53565b61104a6020830184610f75565b9392505050565b60006020820190506110666000830184610e62565b92915050565b60006020820190506110816000830184610e71565b92915050565b600060208201905081810360008301526110a081610e80565b9050919050565b600060208201905081810360008301526110c081610ea3565b9050919050565b600060208201905081810360008301526110e081610ec6565b9050919050565b6000602082019050818103600083015261110081610ee9565b9050919050565b6000602082019050818103600083015261112081610f0c565b9050919050565b6000602082019050818103600083015261114081610f2f565b9050919050565b6000602082019050818103600083015261116081610f52565b9050919050565b600060208201905061117c6000830184610f75565b92915050565b600082825260208201905092915050565b600061119e8261126d565b91506111a98361126d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111de576111dd6112d1565b5b828201905092915050565b60006111f48261126d565b91506111ff8361126d565b925082821015611212576112116112d1565b5b828203905092915050565b60006112288261124d565b9050919050565b600061123a8261124d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611282826112ad565b9050919050565b60006112948261129b565b9050919050565b60006112a68261124d565b9050919050565b60006112b8826112bf565b9050919050565b60006112ca8261124d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f416c726561647920656e64656400000000000000000000000000000000000000600082015250565b7f76616c7565203c20686967686573740000000000000000000000000000000000600082015250565b7f596f7520617265206e6f74207468652073656c6c657200000000000000000000600082015250565b7f6e6f742073746172746564000000000000000000000000000000000000000000600082015250565b7f5374617274656400000000000000000000000000000000000000000000000000600082015250565b7f656e646564000000000000000000000000000000000000000000000000000000600082015250565b7f6e6f7420656e6465640000000000000000000000000000000000000000000000600082015250565b6114288161121d565b811461143357600080fd5b50565b61143f8161126d565b811461144a57600080fd5b5056fea26469706673582212200096042193467d55c5868e47f4a55776deb2630b43f003d51af89faea9f94c6064736f6c63430008040033';

export class EnglishAuction__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nft: string,
    _startingBid: BigNumberish,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnglishAuction> {
    return super.deploy(
      _nft,
      _startingBid,
      _duration,
      overrides || {}
    ) as Promise<EnglishAuction>;
  }
  getDeployTransaction(
    _nft: string,
    _startingBid: BigNumberish,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nft,
      _startingBid,
      _duration,
      overrides || {}
    );
  }
  attach(address: string): EnglishAuction {
    return super.attach(address) as EnglishAuction;
  }
  connect(signer: Signer): EnglishAuction__factory {
    return super.connect(signer) as EnglishAuction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnglishAuctionInterface {
    return new utils.Interface(_abi) as EnglishAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnglishAuction {
    return new Contract(address, _abi, signerOrProvider) as EnglishAuction;
  }
}
